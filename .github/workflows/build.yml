name: build

on:
  repository_dispatch:
  schedule:
    - cron: '0 2 3 * *'

jobs:
  prebuild:
    name: Prebuild actions
    runs-on: [self-hosted, linux, x64]
    env:
      PACKER_CACHE_DIR: /var/tmp/packer_cache

    steps:
      - name: Create Packer cache directory if not already exists
        run: test -d "${PACKER_CACHE_DIR}" || mkdir -v "${PACKER_CACHE_DIR}"

      - name: Create BOX_VERSION file
        run: |
          BOX_VERSION="$(date +%Y%m%d).02"
          echo "*** Creating new file: ${PACKER_CACHE_DIR}/BOX_VERSION | ${BOX_VERSION}"
          echo "${BOX_VERSION}" > "${PACKER_CACHE_DIR}/BOX_VERSION"

  build:
    name: "*"
    runs-on: [self-hosted, linux, x64]
    needs: prebuild
    env:
      # BOX_VERSION: "20190608.01"
      # DOCKER_COMMAND: docker
      PACKER_IMAGES_OUTPUT_DIR: /var/tmp/packer-templates-images
      PACKER_CACHE_DIR: /var/tmp/packer_cache
      LOGDIR: /var/tmp/packer-templates-logs
      VAGRANTUP_USER: peru
      VAGRANTUP_ACCESS_TOKEN: ${{ secrets.VAGRANTUP_ACCESS_TOKEN }}
      # PACKER_RUN_TIMEOUT: 18000
      # USE_DOCKERIZED_PACKER: "true"
      # PACKER_LOG: 1
      # VAGRANT_LOG: info

    strategy:
      max-parallel: 1
      matrix:
        stage:
          - my_ubuntu-18.04-server-amd64-libvirt
          - my_ubuntu-18.04-server-amd64-virtualbox
          - ubuntu-16.04-server-amd64-libvirt
          - ubuntu-16.04-server-amd64-virtualbox
          - ubuntu-18.04-server-amd64-libvirt
          - ubuntu-18.04-server-amd64-virtualbox
          - ubuntu-19.04-desktop-amd64-libvirt
          - ubuntu-19.04-desktop-amd64-virtualbox
          - my_centos-7-x86_64-libvirt
          - my_centos-7-x86_64-virtualbox
          - windows-server-2019-datacenter-x64-eval-libvirt
          - windows-server-2019-datacenter-x64-eval-virtualbox
          - windows-server-2016-standard-x64-eval-libvirt
          - windows-server-2016-standard-x64-eval-virtualbox
          - windows-server-2012_r2-standard-x64-eval-libvirt
          - windows-server-2012_r2-standard-x64-eval-virtualbox
          - my_windows-10-enterprise-x64-eval-libvirt
          - my_windows-10-enterprise-x64-eval-virtualbox
          - windows-10-enterprise-x64-eval-libvirt
          - windows-10-enterprise-x64-eval-virtualbox

    steps:
      - uses: actions/checkout@v2

      - name: Checkout submodules
        shell: bash
        run: |
          ls -la
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      - name: Build image - ${{ matrix.stage }}
        run: |
          ln -sv "${PACKER_CACHE_DIR}" packer_cache
          ./build.sh ${{ matrix.stage }}

      - name: Check the created box image - ${{ matrix.stage }}
        run: ./vagrant_init_destroy_boxes.sh ${PACKER_IMAGES_OUTPUT_DIR}/${{ matrix.stage }}.box

      - name: Upload box to Vagrant Cloud - ${{ matrix.stage }}
        if: github.ref == 'refs/heads/master'
        run: |
          export BOX_VERSION=$(cat "${PACKER_CACHE_DIR}/BOX_VERSION")
          echo "*** Using BOX_VERSION=${BOX_VERSION} from file: ${PACKER_CACHE_DIR}/BOX_VERSION"
          ./upload_box_to_vagrantup.sh ${VAGRANTUP_USER}@${PACKER_IMAGES_OUTPUT_DIR}/${{ matrix.stage }}.box

      - name: Log cleanup - ${{ matrix.stage }}
        run: rm -v ${LOGDIR}/${{ matrix.stage }}*

  cleanup:
    needs: build
    name: Cleanup
    runs-on: [self-hosted, linux, x64]
    env:
      PACKER_IMAGES_OUTPUT_DIR: /var/tmp/packer-templates-images
      PACKER_CACHE_DIR: /var/tmp/packer_cache
      LOGDIR: /var/tmp/packer-templates-logs
      VAGRANT_TMP: /var/tmp/vagrant_init_destroy_boxes
    steps:
      - name: Cleanup
        run: |
          rm -v "${PACKER_CACHE_DIR}/BOX_VERSION"
          rm -v ${PACKER_IMAGES_OUTPUT_DIR}/*.box
          rmdir -v "${PACKER_IMAGES_OUTPUT_DIR}" "${LOGDIR}" "${VAGRANT_TMP}" || true

  vagrantup_check:
    needs: build
    name: Verify if the boxes are avaiable on the Vegrant Cloud
    runs-on: ubuntu-18.04
    steps:
      - name: Check the boxes at app.vagrantup.com
        run: |
          for NAME in ubuntu-{18.10,18.04}-desktop-amd64 ubuntu-{18.04,16.04,14.04}-server-amd64 my_ubuntu-{18.04,16.04}-server-amd64 my_centos-7-x86_64 my_windows-10-enterprise-x64-eval windows-{server-{{2016,2012_r2}-standard,2019-datacenter},10-enterprise}-x64-eval; do
            for VAGRANT_PROVIDER in virtualbox libvirt; do
              CURRENT_VERSION=$(curl -s https://app.vagrantup.com/api/v1/box/peru/$NAME | jq -r ".current_version.version")
              URL="https://app.vagrantup.com/peru/boxes/$NAME/versions/$CURRENT_VERSION/providers/$VAGRANT_PROVIDER.box"
              echo "*** $URL"
              curl -L --fail --silent --head --output /dev/null "$URL" || ( echo "* Failed... ^^^" && exit 1 )
            done
          done
